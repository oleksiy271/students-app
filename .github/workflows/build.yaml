name: react-native-build-packages
on:
  # run on push
  push:
    branches:
      - main
      - develop
    tags:
      - "v*"
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  # allow manual run
  workflow_dispatch: {}

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  install-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .npmrc
      run: printf '@polito:registry=https://npm.pkg.github.com\n//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}\n' > .npmrc
    - name: Install npm dependencies
      run: npm install

  build-android:
    needs: install-and-test
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v3
    - name: Setup .npmrc
      run: printf '@polito:registry=https://npm.pkg.github.com\n//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}\n' > .npmrc
    - name: Install npm dependencies
      run: npm install
    - name: Build Android Release
      run: cd android && ./gradlew assembleRelease && ./gradlew bundleRelease
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: android-release
        path: |
          android/app/build/outputs/apk/release/
          android/app/build/outputs/bundle/release/
  build-ios:
    env:
      MATCH_PASSWORD: ${{ secrets.FASTLANE_MATCH_KEY }}
      FASTLANE_PASSWORD: ${{ secrets.FASTLANE_POLI_MOBILE_PW }}
      FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_DEV_PW }}
      LANG: ${{ 'en_US.UTF-8' }}
      #ImageOS: macos12
      ImageOS: macos1015
      CI: "true"
      MATCH_GIT_PRIVATE_KEY: "./github_access.pk"
      GYM_SILENT: "true"

    needs: install-and-test
    runs-on: [self-hosted, macos-12]
    steps:
    - name: Select Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '14'
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        working-directory: ./ios
        ruby-version: '2.7.5'
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: ./node_modules
        key: ${{ runner.os }}-npm-${{ hashFiles('./package-lock.json') }}
    - name: Setup .npmrc
      run: printf '@polito:registry=https://npm.pkg.github.com\n//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}\n' > .npmrc
    - name: Install npm dependencies
      run: npm install
    - name: Cache pods
      uses: actions/cache@v3
      with:
        path: ./ios/Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('./ios/Podfile') }}
    - name: Install pod dependencies
      working-directory: ./ios
      run: bundle exec pod install
    - name: Fastlane BETA lane
      working-directory: ./ios
      run: |
        echo "${{ secrets.MATCH_GIT_AUTH_PK }}" > ${MATCH_GIT_PRIVATE_KEY}
        chmod 600 ${MATCH_GIT_PRIVATE_KEY}
        bundle exec fastlane beta
    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ios-release
        path: |
          ios/build/students.ipa
